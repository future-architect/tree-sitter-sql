================================================================================
INSERT statement
================================================================================

INSERT INTO table1 VALUES (1, 'test');
INSERT INTO table1 (col1) VALUES (1);
INSERT INTO table1 ("Foo 1") VALUES (1);
INSERT INTO table1 ("Foo 1", bar) VALUES (1, 2);
INSERT INTO table2 SELECT * FROM generate_series(1, 100, 1);
INSERT INTO table1 (SELECT * FROM generate_series(1, 100, 1))

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))))
  (insert_statement
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number))))
  (insert_statement
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number))))
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (number))))
  (insert_statement
    (identifier)
    (select_statement
      (select_clause
        (select_clause_body
          (asterisk_expression)))
      (from_clause
        (function_call
          (identifier)
          (number)
          (number)
          (number)))))
  (insert_statement
    (identifier)
    (select_subexpression
      (select_statement
        (select_clause
          (select_clause_body
            (asterisk_expression)))
        (from_clause
          (function_call
            (identifier)
            (number)
            (number)
            (number)))))))

================================================================================
INSERT statement values with multiple items
================================================================================

INSERT INTO table1 VALUES (1, 'a'), (2, 'b');

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content))))))

================================================================================
INSERT statement values with order
================================================================================

INSERT INTO table1(c1, c2) VALUES (1, 'a'), (2, 'b') ORDER BY c1, c2 DESC;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (order_by_clause
        (order_expression
          (identifier))
        (order_expression
          (identifier))))))

================================================================================
INSERT statement values with limit
================================================================================

INSERT INTO table1 VALUES (1, 'a'), (2, 'b') LIMIT 1;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') LIMIT ALL;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') LIMIT +1;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') LIMIT 1 + 2;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (limit_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (limit_clause)))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (limit_clause
        (unary_expression
          (number)))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (limit_clause
        (binary_expression
          (number)
          (number))))))

================================================================================
INSERT statement values with offset
================================================================================

INSERT INTO table1 VALUES (1, 'a'), (2, 'b') OFFSET 1;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') OFFSET 1 ROW;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') OFFSET 1 ROWS;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (offset_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (offset_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (offset_clause
        (number)))))

================================================================================
INSERT statement values with fetch
================================================================================

INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH FIRST ROW ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH FIRST ROWS ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH NEXT ROW ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH NEXT ROWS ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH FIRST 1 ROW ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH FIRST 1 ROWS ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH NEXT 1 ROW ONLY;
INSERT INTO table1 VALUES (1, 'a'), (2, 'b') FETCH NEXT 1 ROWS ONLY;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause)))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause)))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause)))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause)))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause
        (number))))
  (insert_statement
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))
      (values_clause_item
        (number)
        (string
          (content)))
      (fetch_clause
        (number)))))

================================================================================
INSERT statement with RETURNING clause
================================================================================

INSERT INTO distributors (did, dname) VALUES (DEFAULT, 'XYZ Widgets')
   RETURNING did;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (identifier)
        (string
          content: (content))))
    (returning_clause
      (identifier))))

================================================================================
INSERT statement with aliased table
================================================================================

INSERT
INTO
	TABLE1 AS TBL1
(
	COLUMN1
,	COLUMN2
) VALUES (
	VALUE1
,	VALUE2
)

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (alias
      (identifier)
      (identifier))
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (identifier)
        (identifier)))))

================================================================================
INSERT statement with CTE
================================================================================

WITH t AS (
    SELECT * FROM foo
)
INSERT INTO table1 VALUES (1, 'test');

WITH RECURSIVE search_tree(id, link, data) AS NOT MATERIALIZED(
    SELECT * FROM foo
)
INSERT INTO table1 VALUES (1, 'test');

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (with_clause
      (cte
        (identifier)
        (select_statement
          (select_clause
            (select_clause_body
              (asterisk_expression)))
          (from_clause
            (identifier)))))
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content)))))
  (insert_statement
    (with_clause
      (cte
        (identifier)
        (identifier)
        (identifier)
        (identifier)
        (select_statement
          (select_clause
            (select_clause_body
              (asterisk_expression)))
          (from_clause
            (identifier)))))
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          (content))))))

================================================================================
INSERT statement with ON CONFLICT (UPSERT)
================================================================================

INSERT INTO distributors (did, dname)
    VALUES (5, 'Gizmo Transglobal'), (6, 'Associated Computing, Inc')
    ON CONFLICT (did) DO UPDATE SET dname = EXCLUDED.dname;
INSERT INTO distributors (did, dname) VALUES (7, 'Redline GmbH')
    ON CONFLICT (did) DO NOTHING;
INSERT INTO distributors AS d (did, dname) VALUES (8, 'Anvil Distribution')
    ON CONFLICT (did) DO UPDATE
    SET dname = EXCLUDED.dname || ' (formerly ' || d.dname || ')'
    WHERE d.zipcode <> '21201';
INSERT INTO distributors (did, dname) VALUES (9, 'Antwerp Design')
    ON CONFLICT ON CONSTRAINT distributors_pkey DO NOTHING;
INSERT INTO distributors (did, dname) VALUES (10, 'Conrad International')
    ON CONFLICT (did) WHERE is_active DO NOTHING;
INSERT INTO distributors (did, dname) VALUES (7, 'Redline GmbH')
    ON CONFLICT (did1 COLLATE "x" int4_ops, did2 COLLATE "x" int4_ops) DO NOTHING;

--------------------------------------------------------------------------------

(source_file
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content)))
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier))
      (conflict_action
        (set_clause
          (set_clause_body
            (assigment_expression
              (identifier)
              (dotted_name
                (identifier)
                (identifier))))))))
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier))
      (conflict_action)))
  (insert_statement
    (alias
      (identifier)
      (identifier))
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier))
      (conflict_action
        (set_clause
          (set_clause_body
            (assigment_expression
              (identifier)
              (binary_expression
                left: (binary_expression
                  left: (binary_expression
                    left: (dotted_name
                      (identifier)
                      (identifier))
                    right: (string
                      content: (content)))
                  right: (dotted_name
                    (identifier)
                    (identifier)))
                right: (string
                  content: (content))))))
        (where_clause
          (binary_expression
            left: (dotted_name
              (identifier)
              (identifier))
            right: (string
              content: (content)))))))
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier))
      (conflict_action)))
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier)
        (where_clause
          (identifier)))
      (conflict_action)))
  (insert_statement
    (identifier)
    (identifier)
    (identifier)
    (values_clause
      (values_clause_item
        (number)
        (string
          content: (content))))
    (on_conflict_clause
      (conflict_target
        (identifier)
        (collation
          (identifier))
        (op_class
          (identifier))
        (identifier)
        (collation
          (identifier))
        (op_class
          (identifier)))
      (conflict_action))))
